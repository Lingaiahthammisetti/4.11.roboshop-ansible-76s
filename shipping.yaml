- name: install shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1
    login_password: RoboShop@1
    login_host: mysql.lingaiah.online
  tasks:
  - name: install maven
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download shipping application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: extract shipping application
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: deamon realod and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present

  - name: load cities data
    ansible.builtin.shell: "mysql -h mysql.lingaiah.online -uroot -p{{mysql_password}}  < /app/db/schema.sql"

  - name: load cities data-2
    ansible.builtin.shell: "mysql -h mysql.lingaiah.online -uroot -p{{mysql_password}}  < /app/db/app-user.sql"
  
  - name: load cities data-3
    ansible.builtin.shell: "mysql -h mysql.lingaiah.online -uroot -p{{mysql_password}}  < /app/db/master-data.sql"

  # - name: Install python mysql dependencies
  #   ansible.builtin.pip:
  #     name:
  #     - PyMySQL
  #     - cryptography
  #     executable: pip3.9 #pip3.11 if python version is 3.11

  # - name: import data into mysql
  #   community.mysql.mysql_db:
  #     login_user: root
  #     login_password: "{{ login_password }}"
  #     login_host: "{{ login_host }}"
  #     target: /app/db/schema.sql
  #     state: import
  #     name: all

  # - name: import data into mysql
  #   community.mysql.mysql_db:
  #     login_user: root
  #     login_password: "{{ login_password }}"
  #     login_host: "{{ login_host }}"
  #     target: /app/db/app-user.sql
  #     state: import
  #     name: all

  # - name: import data into mysql
  #   community.mysql.mysql_db:
  #     login_user: root
  #     login_password: "{{ login_password }}"
  #     login_host: "{{ login_host }}"
  #     target: /app/db/master-data.sql
  #     state: import
  #     name: all

  - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes
